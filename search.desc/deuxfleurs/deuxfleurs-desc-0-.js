searchState.loadedDescShard("deuxfleurs", 0, "Deuxfleurs\nGeneric type for main displayed data (surface, …\nRGBA double precision color.\nHolds the application state. Starting point to add …\nGlobal rendering settings\nElement to add surfaces, point clouds… to\nAlpha component of the color\nBlue component of the color\nBackground color\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGreen component of the color\nGet current selected object: first the name, then index <code>i</code> …\nCreates a handle to add elements to. Needs to be run after.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOnly redraw scene when window requires it\nRed component of the color\nPolitely ask to render the next frame\nRegister list of segments\nDisable storing last redraw in buffer\nFit camera and ground to match the visible elements\nShow the window and start the app.\nTake a screenshot at the next frame\nGround shadow\nNumber of frame used in temporal anti aliasing, <code>None</code> …\nGeneral types for genericity in functions parameters.\nCustom Ui components for mesh loading\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper iterator struct\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhen clicked, pops an interative window to load a mesh\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")