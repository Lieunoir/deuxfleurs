searchState.loadedDescShard("egui", 1, "Set the rounding of the button.\nSet the rounding of the progress bar.\nRound the corners of the image.\nSet rounding for the <code>ImageButton</code>.\nRound the corners of the image.\nSet custom formatter defining how numbers are converted …\nSet custom formatter defining how numbers are converted …\nSet custom parser defining how the text input is parsed …\nSet custom parser defining how the text input is parsed …\nExtracts uri and frame index\nThe desired height of the bar. Will use the default …\nThe desired width of the bar. Will use all horizontal …\nWhen dragging the value, how fast does it move?\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Extend</code>, disabling …\nOverride background fill color. Note that this will …\nThe fill color of the bar.\nDetermines how the image should shrink/expand/stretch/etc. …\nFit the image to an exact size.\nFit the image to a fraction of the available space.\nFit the image to its original size with some scaling.\nSet an exact number of decimals to display. Values will …\nSet an exact number of decimals to display.\nTurn off the frame\nTurn off the frame\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoad the image from some raw bytes.\nLoad the image from an existing texture.\nLoad the image from a URI.\nShow larger buttons for switching between light and dark …\nShow a small button to switch to/from dark/light mode …\nShow larger buttons for switching between light and dark …\nShow a small button to switch to/from dark/light mode …\nExtend each end of the separator line by this much.\nSets the horizontal alignment of the Label to the given …\nChange the shape of the slider handle\nChecks if bytes are gifs\nChecks if bytes are webp\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSize hint for e.g. rasterizing an svg.\nExplicitly ask for a horizontal line.\nCreates a button with an image. The size of the image as …\nCreates a button with an image to the left of the text. …\nIf true, the tint of the image is multiplied by the widget …\nDisplay an indeterminate state (neither checked nor …\nHelper: equivalent to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFor logarithmic sliders, the largest positive value we are …\nDo layout and position the galley in the ui, without …\nErrors\nLoad the image from its <code>Image::source</code>, returning the …\nMake this a logarithmic slider. This is great for when the …\nWhether or not the <code>ImageFit</code> should maintain the image’s …\nWhether or not the final size should maintain the original …\nSet a maximum number of decimals to display. Values will …\nSet a maximum number of decimals to display.\nSet the max height of the image.\nSet the max size of the image.\nDetermines the maximum size of the image.\nSet the max width of the image.\nSet a minimum number of decimals to display. Normally you …\nSet a minimum number of decimals to display.\nSet the minimum size of the button.\nProgress in the <code>[0, 1]</code> range, where <code>1</code> means “completed”…\nCreates a new horizontal slider.\nLoad the image from some source.\nCreate a new spinner that uses the style’s <code>interact_size</code> …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nAlways open this hyperlink in a new browser tab.\nVertical or horizontal slider? The default is horizontal.\nPaint the image in the given rectangle.\nPaint the spinner in the given rectangle.\nShow a prefix before the number, e.g. “x: “\nShow a prefix before the number, e.g. “x: “\nSets valid range for dragging the value.\nShow a button to reset a value to its default. The button …\nShow a button to reset a value to its default. The button …\nRotate the image about an origin by some angle\nRotate the image about an origin by some angle\nRound the corners of the image.\nSet rounding for the <code>ImageButton</code>.\nCan the user select the text with the mouse?\nIf <code>true</code>, mark this button as “selected”.\nIf <code>true</code>, mark this button as “selected”.\nBy default, buttons senses clicks. Change this to a …\nMake the label respond to clicks and/or drags.\nMake the image respond to clicks and/or drags.\nBy default, buttons senses clicks. Change this to a …\nShow some text on the right side of the button, in weak …\nShow a spinner when the image is loading.\nShow the progress in percent on the progress bar.\nControl whether or not the slider shows the current value. …\nContract each end of the separator line by this much.\nFit the image to 100% of its available size, shrinking it …\nSets the spinner’s size. The size sets both the height …\nMake this a small button, suitable for embedding into text.\nFor logarithmic sliders that includes zero: what is the …\nTurn smart aim on/off. Default is ON. There is almost no …\nHow much space we take up. The line is painted in the …\nHow much the value changes when dragged one point (logical …\nSets the minimal change of the value.\nOverride button stroke. Note that this will override any …\nAdd a suffix to the number, this can be e.g. a unit (“°…\nAdd a suffix to the number, this can be e.g. a unit (“°…\nA custom text to display on the progress bar.\nShow a text next to the slider (e.g. explaining what the …\nTexture options used when creating the texture.\nSize of the texture, if known.\nMultiply image color with this. Default is WHITE (no tint).\nMultiply image color with this. Default is WHITE (no tint).\nMultiply image color with this. Default is WHITE (no tint).\nDisplay trailing color behind the slider’s circle. …\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Truncate</code>.\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Truncate</code>.\nAllocate space, interact, paint, and return a <code>Response</code>.\nUpdate the value on each key press when text-editing the …\nReturns the URI of the image.\nGet the <code>uri</code> that this image was constructed from.\nSelect UV range. Default is (0,0) in top-left, (1,1) …\nSelect UV range. Default is (0,0) in top-left, (1,1) …\nSelect UV range. Default is (0,0) in top-left, (1,1) …\nExplicitly ask for a vertical line.\nMake this a vertical slider.\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Wrap</code>.\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Wrap</code>.\nSet the wrap mode for the text.\nSet the wrap mode for the text.\nThe unique identifier for this image, e.g. …\nWhat options to show for alpha\nShow both blend and additive options.\nOnly show normal blend options for alpha.\nSet alpha to 1.0, and show no option for it.\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a color picker where the user can change the given …\nShows a color picker where the user can change the given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nShow a color with background checkers to demonstrate …\nShow a color with background checkers to demonstrate …\nTrait constraining what types <code>crate::TextEdit</code> may use as …\nA text region that the user can edit the contents of.\nThe output from a <code>TextEdit</code>.\nThe text edit state stored between frames.\nReturns this buffer as a <code>str</code>.\nSet the background color of the <code>TextEdit</code>. The default is …\nThe currently selected range of characters.\nSets the limit for the amount of characters can be entered\nReads the given character range.\nReads the given character range.\nClears all characters in this buffer\nClears all characters in this buffer\nWhen <code>true</code> (default), overflowing text will be clipped.\nBuild a <code>TextEdit</code> focused on code editing. By default it …\nControls the text selection.\nWhen <code>true</code> (default), the cursor will initially be placed …\nWhere the text cursor is.\nDeletes a range of text <code>char_range</code> from this buffer.\nSet the number of rows to show by default. The default for …\nSet to 0.0 to keep as small as possible. Set to …\nPick a <code>crate::FontId</code> or <code>TextStyle</code>.\nDefault is <code>true</code>. If set to <code>false</code> there will be no frame …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHow the text was displayed.\nWhere the text in <code>Self::galley</code> ended up on the screen.\nShow a faint hint text when the text field is empty.\nSet a specific style for the hint text.\nSet the horizontal align of the inner text.\nUse if you want to set an explicit <code>Id</code> for this widget.\nA source for the unique <code>Id</code>, e.g. …\nA source for the unique <code>Id</code>, e.g. …\nInserts text <code>text</code> into this buffer at character index …\nDefault is <code>true</code>. If set to <code>false</code> then you cannot interact …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCan this text be edited?\nOverride how text is being shown inside the <code>TextEdit</code>.\nWhen <code>false</code> (default), pressing TAB will move focus to the …\nSet margin of text. Default is <code>Margin::symmetric(4.0, 2.0)</code>\nSet the minimum size of the <code>TextEdit</code>.\nA <code>TextEdit</code> for multiple lines. Pressing enter key will …\nIf true, hide the letters from view and prevent copying …\nReplaces all contents of this string with <code>text</code>\nReplaces all contents of this string with <code>text</code>\nThe interaction response.\nSet the return key combination.\nSets the currently selected range of characters.\nShow the <code>TextEdit</code>, returning a rich <code>TextEditOutput</code>.\nNo newlines (<code>\\n</code>) allowed. Pressing enter key will result …\nThe state we stored after the run.\nClears all characters in this buffer and returns a string …\nClears all characters in this buffer and returns a string …\nThe text was clipped to this rectangle when painted.\nSet the vertical align of the inner text.")